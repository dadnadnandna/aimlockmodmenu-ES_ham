-- Define services and variables
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local Mouse = LocalPlayer:GetMouse()
local RunService = game:GetService("RunService")

-- Function to create the sit tool
local function createSitTool()
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "SitTool"
    tool.Activated:Connect(function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            local humanoid = LocalPlayer.Character.Humanoid
            humanoid.Sit = not humanoid.Sit
        end
    end)
    tool.Parent = LocalPlayer.Backpack
end

-- Function to create the teleport tool
local function createTeleportTool()
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "TeleportTool"
    tool.Activated:Connect(function()
        local target = Mouse.Hit.p
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character:MoveTo(target)
        end
    end)
    tool.Parent = LocalPlayer.Backpack
end

-- Aim-lock functionality
local aimLockEnabled = false
local lockedPlayer = nil

-- Function to find the closest player to the cursor position
local function findClosestPlayer(cursorPosition)
    local closestPlayer = nil
    local minDistance = math.huge
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then  -- Exclude the local player
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                local distance = (character.HumanoidRootPart.Position - cursorPosition).magnitude
                if distance < minDistance then
                    minDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    
    return closestPlayer
end

-- Function to toggle aim-lock
local function toggleAimLock()
    aimLockEnabled = not aimLockEnabled
    if aimLockEnabled then
        print("Aim-lock enabled")
        game.StarterGui:SetCore("ChatMakeSystemMessage", {
            Text = "ES_ham: Aim-lock enabled";
            Color = Color3.fromRGB(255, 255, 255);
            Font = Enum.Font.SourceSansBold;
            FontSize = Enum.FontSize.Size18;
        })
    else
        print("Aim-lock disabled")
        game.StarterGui:SetCore("ChatMakeSystemMessage", {
            Text = "ES_ham: Aim-lock disabled";
            Color = Color3.fromRGB(255, 255, 255);
            Font = Enum.Font.SourceSansBold;
            FontSize = Enum.FontSize.Size18;
        })
        lockedPlayer = nil  -- Clear locked player when aim-lock is disabled
    end
end

-- Connect the toggleAimLock function to the 'T' key press event
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.T then
        toggleAimLock()
    end
end)

-- Main aim-lock function
RunService.RenderStepped:Connect(function()
    if aimLockEnabled then
        local cursorPosition = Mouse.Hit.p
        if not lockedPlayer then
            lockedPlayer = findClosestPlayer(cursorPosition)  -- Lock onto the closest player if not already locked
        end
        
        if lockedPlayer and lockedPlayer.Character and lockedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            -- Predict the player's future position based on their current velocity
            local targetPosition = lockedPlayer.Character.HumanoidRootPart.Position + Vector3.new(-0.1, 1.5, 0) -- Adjust to aim at the player's torso and slightly to the left
            local targetVelocity = lockedPlayer.Character.HumanoidRootPart.Velocity
            local predictionTime = 0.1 -- You can adjust this value for better prediction
            local predictedPosition = targetPosition + targetVelocity * predictionTime

            -- Move the camera to look at the predicted position of the locked player
            game.Workspace.CurrentCamera.CFrame = CFrame.new(game.Workspace.CurrentCamera.CFrame.Position, predictedPosition)
        else
            -- If the locked player is no longer valid, disable aim-lock
            aimLockEnabled = false
            lockedPlayer = nil
            print("Locked player lost, disabling aim-lock")
        end
    end
end)

-- Function to toggle the mod menu
local function toggleModMenu()
    local gui = LocalPlayer.PlayerGui:FindFirstChild("ModMenu")
    if not gui then
        gui = Instance.new("ScreenGui")
        gui.Name = "ModMenu"
        gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0, 250, 0, 300)
        frame.Position = UDim2.new(0.5, -125, 0.5, -150)
        frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        frame.BorderSizePixel = 0
        frame.Parent = gui
        frame.ClipsDescendants = true

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 0.1, 0)
        textLabel.Position = UDim2.new(0, 0, 0, 0)
        textLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        textLabel.BorderSizePixel = 0
        textLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
        textLabel.TextSize = 18
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.Text = "ES_MenuV4"
        textLabel.Parent = frame

        local buttonTeleport = Instance.new("TextButton")
        buttonTeleport.Size = UDim2.new(0.8, 0, 0.2, 0)
        buttonTeleport.Position = UDim2.new(0.5, 0, 0.2, 0)
        buttonTeleport.AnchorPoint = Vector2.new(0.5, 0)
        buttonTeleport.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
        buttonTeleport.BorderSizePixel = 0
        buttonTeleport.TextColor3 = Color3.fromRGB(255, 255, 255)
        buttonTeleport.TextSize = 14
        buttonTeleport.Text = "Get Teleport Tool"
        buttonTeleport.Parent = frame
        buttonTeleport.MouseButton1Click:Connect(createTeleportTool)

        local buttonSit = Instance.new("TextButton")
        buttonSit.Size = UDim2.new(0.8, 0, 0.2, 0)
        buttonSit.Position = UDim2.new(0.5, 0, 0.45, 0)
        buttonSit.AnchorPoint = Vector2.new(0.5, 0)
        buttonSit.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
        buttonSit.BorderSizePixel = 0
        buttonSit.TextColor3 = Color3.fromRGB(255, 255, 255)
        buttonSit.TextSize = 14
        buttonSit.Text = "Get Sit Tool"
        buttonSit.Parent = frame
        buttonSit.MouseButton1Click:Connect(createSitTool)

        local buttonAimLock = Instance.new("TextButton")
        buttonAimLock.Size = UDim2.new(0.8, 0, 0.2, 0)
        buttonAimLock.Position = UDim2.new(0.5, 0, 0.7, 0)
        buttonAimLock.AnchorPoint = Vector2.new(0.5, 0)
        buttonAimLock.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
        buttonAimLock.BorderSizePixel = 0
        buttonAimLock.TextColor3 = Color3.fromRGB(255, 255, 255)
        buttonAimLock.TextSize = 14
        buttonAimLock.Text = "Aimlock working"
        buttonAimLock.Parent = frame
        buttonAimLock.MouseButton1Click:Connect(toggleAimLock)

        -- Adding UICorner for rounded corners
        local function addUICorner(button)
            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(0, 12)
            corner.Parent = button
        end

        addUICorner(buttonTeleport)
        addUICorner(buttonSit)
        addUICorner(buttonAimLock)
    else
        gui.Enabled = not gui.Enabled
    end
end

-- Connect the toggleModMenu function to the 'C' key press event
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.C then
        toggleModMenu()
    end
end)
-- Check if the script has been run before
if not game.Players.LocalPlayer:FindFirstChild("ScriptExecuted") then
    -- Mark the script as executed
    local scriptExecutedFlag = Instance.new("BoolValue")
    scriptExecutedFlag.Name = "ScriptExecuted"
    scriptExecutedFlag.Parent = game.Players.LocalPlayer

    -- Create the ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ScriptGui"
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create the TextLabel
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0, 200, 0, 50)
    textLabel.Position = UDim2.new(0.5, -100, 0, -50) -- Start above the screen
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "*update V4*"
    textLabel.TextColor3 = Color3.fromRGB(0, 255, 0) -- Green color
    textLabel.TextScaled = true
    textLabel.Parent = screenGui

    -- Add the sound
    local sound = Instance.new("Sound")
    sound.Name = "ScriptSound"
    sound.SoundId = "rbxassetid://6493287948" -- Replace with your sound ID
    sound.Volume = 1
    sound.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Play the sound
    sound:Play()

    -- Tween the TextLabel down after a short delay to sync with sound
    wait(0.1) -- Adjust the delay as necessary for synchronization

    local tweenService = game:GetService("TweenService")
    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out)
    local goal = { Position = UDim2.new(0.5, -100, 0.5, -25) } -- Center of the screen
    local tween = tweenService:Create(textLabel, tweenInfo, goal)

    tween:Play()
    tween.Completed:Wait()

    -- Wait for 2 seconds
    wait(2)

    -- Tween the TextLabel up and remove it
    local goalUp = { Position = UDim2.new(0.5, -100, 0, -50) } -- Above the screen
    local tweenUp = tweenService:Create(textLabel, tweenInfo, goalUp)

    tweenUp:Play()
    tweenUp.Completed:Wait()

    -- Destroy the GUI and stop the sound
    screenGui:Destroy()
    sound:Stop()
    sound:Destroy()
end
